/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.is.aed.ui;

import com.neu.is.aed.model.Encounter;
import com.neu.is.aed.model.EncounterHistory;
import com.neu.is.aed.model.Patient;
import com.neu.is.aed.model.PatientDirectory;
import com.neu.is.aed.model.Person;
import com.neu.is.aed.model.PersonDirectory;
import com.neu.is.aed.model.VitalSigns;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vidhi
 */
public class AddPatient extends javax.swing.JPanel {

    /**
     * Creates new form AddPatient
     */
    String missingField = "Missing Field: ";
    Person person = new Person();
    Patient patient = new Patient();
    public AddPatient() {
        initComponents(); 
        loadPersonTable();
    }
    
    public void loadPersonTable(){
    int rowCount = tblPersonDirectory.getRowCount();
    DefaultTableModel model = (DefaultTableModel) tblPersonDirectory.getModel();
    for(int i=rowCount - 1;i>=0;i--){
        model.removeRow(i);
    }
    for(Person person: PersonDirectory.personDir){
        Object row[] = new Object[10];
        row[0] = person.getName();
        row[1] = person.getAge();
        row[2] = person.getGender();
        row[3] = person.getPhoneNumber();
        row[4] = person.getBloodgroup();
        row[5] = person.address.getHouseNumber();
        row[6] = person.address.getCommunityName();
        row[7] = person.address.getCityName();
        row[8] = person.address.getState();
        row[9] = person.address.getZip();
        model.addRow(row);
    }
    }
    
    public void loadPatientTable(){
    int rowCount = tblPatient.getRowCount();
    DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
    for(int i=rowCount - 1;i>=0;i--){
        model.removeRow(i);
    }
    for(Patient patient: PatientDirectory.patientDir){
        Object row[] = new Object[11];
        row[0] = patient.getPatientId();
        row[1] = patient.person.getName();
        row[2] = patient.person.getAge();
        row[3] = patient.person.getGender();
        row[4] = patient.person.getPhoneNumber();
        row[5] = patient.person.getBloodgroup();
        row[6] = patient.person.address.getHouseNumber();
        row[7] = patient.person.address.getCommunityName();
        row[8] = patient.person.address.getCityName();
        row[9] = patient.person.address.getState();
        row[10] = patient.person.address.getZip();
        model.addRow(row);
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonDirectory = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        lblPersonalDetails = new javax.swing.JLabel();
        lblVitalDetails = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblBloodGroup = new javax.swing.JLabel();
        lblHouseNumber = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblZip = new javax.swing.JLabel();
        lblSetName = new javax.swing.JLabel();
        lblSetAge = new javax.swing.JLabel();
        lblSetGender = new javax.swing.JLabel();
        lblSetPhoneNumber = new javax.swing.JLabel();
        lblSetBloodGroup = new javax.swing.JLabel();
        lblSetHouseNumber = new javax.swing.JLabel();
        lblSetCommunity = new javax.swing.JLabel();
        lblSetCity = new javax.swing.JLabel();
        lblSetState = new javax.swing.JLabel();
        lblSetZip = new javax.swing.JLabel();
        lblPatientID = new javax.swing.JLabel();
        lblHeartRate = new javax.swing.JLabel();
        lblHighBloodPressure = new javax.swing.JLabel();
        lblRespiratoryRate = new javax.swing.JLabel();
        btnAddPatient = new javax.swing.JButton();
        lblSetPatientID = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        txtHighBloodPressure = new javax.swing.JTextField();
        lblBodyTemprature = new javax.swing.JLabel();
        txtRespiratoryRate = new javax.swing.JTextField();
        txtBodyTemprature = new javax.swing.JTextField();
        btnAddVisit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();

        jTextField1.setText("jTextField1");

        setBackground(new java.awt.Color(153, 153, 153));

        tblPersonDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "PhoneNumber", "Blood Group", "House Number", "Community", "City", "State", "Zip"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPersonDirectory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPersonDirectoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPersonDirectory);

        lblName.setText("Name :");
        lblName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblPersonalDetails.setText("PESRON DETAILS");
        lblPersonalDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblVitalDetails.setText("VITAL DETAILS");
        lblVitalDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAge.setText("Age :");
        lblAge.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblGender.setText("Gender :");
        lblGender.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblPhoneNumber.setText("Phone Number :");
        lblPhoneNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblBloodGroup.setText("Blood Group :");
        lblBloodGroup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblHouseNumber.setText("House Number :");
        lblHouseNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblCommunity.setText("Community :");
        lblCommunity.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblCity.setText("City :");
        lblCity.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblState.setText("State :");
        lblState.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblZip.setText("Zip :");
        lblZip.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetAge.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetGender.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetPhoneNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetBloodGroup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetHouseNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetCommunity.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetCity.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetState.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSetZip.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblPatientID.setText("Patient ID :");
        lblPatientID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblHeartRate.setText("Heart Rate :");
        lblHeartRate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblHighBloodPressure.setText("Blood Pressure :");
        lblHighBloodPressure.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblRespiratoryRate.setText("Respiratory Rate :");
        lblRespiratoryRate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAddPatient.setText("ADD PATIENT");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        lblSetPatientID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtHeartRate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtHeartRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHeartRateKeyTyped(evt);
            }
        });

        txtHighBloodPressure.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtHighBloodPressure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHighBloodPressureKeyTyped(evt);
            }
        });

        lblBodyTemprature.setText("Body Temprature :");
        lblBodyTemprature.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtRespiratoryRate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtRespiratoryRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRespiratoryRateKeyTyped(evt);
            }
        });

        txtBodyTemprature.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtBodyTemprature.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBodyTempratureKeyTyped(evt);
            }
        });

        btnAddVisit.setText("ADD VISIT");
        btnAddVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVisitActionPerformed(evt);
            }
        });

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Age", "Gender", "Phone Number", "Blood Group", "House Number", "Commuity", "City", "State", "Zip"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPatient);
        if (tblPatient.getColumnModel().getColumnCount() > 0) {
            tblPatient.getColumnModel().getColumn(6).setResizable(false);
            tblPatient.getColumnModel().getColumn(8).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPersonalDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnAddPatient))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblAge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPhoneNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblBloodGroup, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblHouseNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblState, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblZip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSetGender, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetCity, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetState, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetZip, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSetAge, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnAddVisit)
                                    .addGap(83, 83, 83))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(52, 52, 52)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblVitalDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblHighBloodPressure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblHeartRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblRespiratoryRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblPatientID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblBodyTemprature, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblSetPatientID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtHeartRate)
                                                .addComponent(txtHighBloodPressure, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                                .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                                .addComponent(txtBodyTemprature, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)))))))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPersonalDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVitalDetails, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblName)
                                            .addComponent(lblSetName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblAge))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblPatientID)
                                            .addComponent(lblSetPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblHeartRate)
                                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(lblSetAge, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblSetGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblHighBloodPressure)
                                .addComponent(txtHighBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSetPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPhoneNumber)
                                        .addGap(0, 8, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBloodGroup)
                                    .addComponent(lblSetBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblHouseNumber)
                                .addGap(2, 2, 2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblRespiratoryRate)
                                    .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBodyTemprature)
                                    .addComponent(txtBodyTemprature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddVisit)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSetHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommunity)
                    .addComponent(lblSetCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCity)
                    .addComponent(lblSetCity, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblState)
                    .addComponent(lblSetState, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblZip)
                    .addComponent(lblSetZip, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddPatient)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        // TODO add your handling code here:
        Patient patient = new Patient();
        
        int min = 1000;  
        int max = 9999; 
        patient.setPatientId((int)(Math.random()*(max-min+1)+min));
        patient.person.setName(lblSetName.getText());
        patient.person.setAge(Integer.parseInt(lblSetAge.getText()));
        patient.person.setGender(lblSetGender.getText());
        patient.person.setPhoneNumber(Long.parseLong(lblSetPhoneNumber.getText()));
        patient.person.setBloodgroup(lblSetBloodGroup.getText());
            
        patient.person.address.houseNumber = Integer.parseInt(lblSetHouseNumber.getText());
        patient.person.address.zip = Integer.parseInt(lblSetZip.getText());
        patient.person.address.communityName = lblSetCommunity.getText();
        patient.person.address.cityName = lblSetCity.getText();
        patient.person.address.state = lblSetState.getText();
        
        PatientDirectory.patientDir.add(patient);
        loadPatientTable();
        JOptionPane.showMessageDialog(this, "Patient Successfully Added");
        
        
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void btnAddVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVisitActionPerformed
        // TODO add your handling code here:
        if(isValidData() == true){ 
        VitalSigns vital = new VitalSigns();
        
        vital.setHeartRate(Integer.parseInt(txtHeartRate.getText()));
        vital.setHighBloodPressure(Integer.parseInt(txtHighBloodPressure.getText()));
        vital.setOxygenLevel(Float.parseFloat(txtRespiratoryRate.getText()));
        vital.setBodytemprature(Float.parseFloat(txtBodyTemprature.getText()));
        
        Encounter encounter = new Encounter();
        encounter.setVitalSigns(vital);
        encounter.setPatient(patient);
        Date visitDate = new Date();
        encounter.setVisitDate(visitDate);
        EncounterHistory.encounterHistory.add(encounter);
        JOptionPane.showMessageDialog(this, "Patient Visit Successfully Added");
        }
    }//GEN-LAST:event_btnAddVisitActionPerformed

    private void tblPersonDirectoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPersonDirectoryMouseClicked
        // TODO add your handling code here:
        int row = tblPersonDirectory.rowAtPoint( evt.getPoint());
        this.person = PersonDirectory.personDir.get(row);
        openSelectedPerson();
    }//GEN-LAST:event_tblPersonDirectoryMouseClicked

    private void tblPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientMouseClicked
        // TODO add your handling code here:
        int row = tblPatient.rowAtPoint( evt.getPoint());
        this.patient = PatientDirectory.patientDir.get(row);
        openSelectedPatient();
    }//GEN-LAST:event_tblPatientMouseClicked

    private void txtHeartRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeartRateKeyTyped
        char typedHeartRate = evt.getKeyChar();
            if(!Character.isDigit(typedHeartRate)){
                evt.consume();
            }
            
        if(txtHeartRate.getText().length() > 2){
                evt.consume();
            }
    }//GEN-LAST:event_txtHeartRateKeyTyped

    private void txtHighBloodPressureKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHighBloodPressureKeyTyped
        // TODO add your handling code here:
        char typedHighBP = evt.getKeyChar();
        if(!Character.isDigit(typedHighBP)){
                evt.consume();
        }
            
        if(txtHighBloodPressure.getText().length() > 2){
                evt.consume();
        }
        
    }//GEN-LAST:event_txtHighBloodPressureKeyTyped

    private void txtRespiratoryRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRespiratoryRateKeyTyped
        // TODO add your handling code here:
        char typedRespiratoryRate = evt.getKeyChar();
        if(!Character.isDigit(typedRespiratoryRate)){
                evt.consume();
        }
            
        if(txtRespiratoryRate.getText().length() > 2){
                evt.consume();
        }
    }//GEN-LAST:event_txtRespiratoryRateKeyTyped

    private void txtBodyTempratureKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBodyTempratureKeyTyped
        // TODO add your handling code here:
        char typedBodyTeprature = evt.getKeyChar();
        if(!Character.isDigit(typedBodyTeprature)){
                evt.consume();
        }
            
        if(txtBodyTemprature.getText().length() > 2){
                evt.consume();
        }
    }//GEN-LAST:event_txtBodyTempratureKeyTyped
    
    private void openSelectedPerson(){
        
        lblSetName.setText(this.person.getName());
        lblSetAge.setText(String.valueOf(this.person.getAge()));
        lblSetGender.setText(this.person.getGender());
        lblSetPhoneNumber.setText(String.valueOf(this.person.getPhoneNumber()));
        lblSetBloodGroup.setText(this.person.getBloodgroup());
        lblSetHouseNumber.setText(String.valueOf(this.person.address.getHouseNumber()));
        lblSetCommunity.setText(this.person.address.getCommunityName());
        lblSetCity.setText(this.person.address.getCityName());
        lblSetState.setText(this.person.address.getState());
        lblSetZip.setText(String.valueOf(this.person.address.getZip()));
        
    }
    
    private void openSelectedPatient(){
        lblSetPatientID.setText(String.valueOf(this.patient.getPatientId()));
    }
    
    private boolean isValidData() {

        boolean isValid = false;
        if(txtHeartRate.getText().isBlank()){
            JOptionPane.showMessageDialog(this, missingField + lblHeartRate.getText(), lblHeartRate.getText(), JOptionPane.ERROR_MESSAGE);          
        }else if(txtHighBloodPressure.getText().isBlank()){
            JOptionPane.showMessageDialog(this, missingField + lblHighBloodPressure.getText(), lblHighBloodPressure.getText(), JOptionPane.ERROR_MESSAGE);          
        }else if(txtRespiratoryRate.getText().isBlank()){
            JOptionPane.showMessageDialog(this, missingField + lblRespiratoryRate.getText(), lblRespiratoryRate.getText(), JOptionPane.ERROR_MESSAGE);          
        }else if(txtBodyTemprature.getText().isBlank()){
            JOptionPane.showMessageDialog(this, missingField + lblBodyTemprature.getText(), lblBodyTemprature.getText(), JOptionPane.ERROR_MESSAGE);          
        }else{
            return isValid = true;
        }
        return isValid;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton btnAddVisit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblBodyTemprature;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblHighBloodPressure;
    private javax.swing.JLabel lblHouseNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPersonalDetails;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblRespiratoryRate;
    private javax.swing.JLabel lblSetAge;
    private javax.swing.JLabel lblSetBloodGroup;
    private javax.swing.JLabel lblSetCity;
    private javax.swing.JLabel lblSetCommunity;
    private javax.swing.JLabel lblSetGender;
    private javax.swing.JLabel lblSetHouseNumber;
    private javax.swing.JLabel lblSetName;
    private javax.swing.JLabel lblSetPatientID;
    private javax.swing.JLabel lblSetPhoneNumber;
    private javax.swing.JLabel lblSetState;
    private javax.swing.JLabel lblSetZip;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblVitalDetails;
    private javax.swing.JLabel lblZip;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTable tblPersonDirectory;
    private javax.swing.JTextField txtBodyTemprature;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtHighBloodPressure;
    private javax.swing.JTextField txtRespiratoryRate;
    // End of variables declaration//GEN-END:variables
}
